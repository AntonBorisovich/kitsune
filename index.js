console.log(getTimestamp() + " [INFO] Starting kitsune for Discord...");

const os = require('os'); // –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –±–∏–±–ª–∏–æ—Ç–µ–∫–∏ –ø–æ–ª—É—á–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –æ —Å–∏—Å—Ç–µ–º–µ (os)
console.log(getTimestamp() + ' [INFO] Running node ' + process.version + ' on ' + os.platform() + ' with ' + Math.floor((os.totalmem() / 1048576)) + 'MB of RAM');

const Discord = require('discord.js'); // –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –±–∏–±–ª–∏–æ—Ç–µ–∫–∏ Discord API (discord.js)
const kitsune = new Discord.Client({ intents: [Discord.GatewayIntentBits.Guilds, Discord.GatewayIntentBits.DirectMessages, Discord.GatewayIntentBits.GuildMessages, Discord.GatewayIntentBits.MessageContent], partials: [Discord.Partials.Channel]}); // —Å–æ–∑–¥–∞–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å –ø—Ä–∞–≤–∞–º–∏
const fs = require("fs"); // –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –±–∏–±–ª–∏–æ—Ç–µ–∫–∏ —Ñ–∞–π–ª–æ–≤–æ–π —Å–∏—Å—Ç–µ–º—ã (fs)

const launch_time = Date.now(); // –∑–∞–ø–æ–º–∏–Ω–∞–µ–º –≤—Ä–µ–º—è –∑–∞–ø—É—Å–∫–∞

// —Å–∫–ª–∞–¥ –º–æ–¥—É–ª–µ–π
let values = {};    // –∑–Ω–∞—á–µ–Ω–∏—è
let funcs = {};     // —Ñ—É–Ω–∫—Ü–∏–∏
let commands = [];  // –∫–æ–º–∞–Ω–¥—ã

let errors = [];    // —Å–ø–∏—Å–æ–∫ –æ—à–∏–±–æ–∫, –ø—Ä–æ–∏–∑–æ—à–µ–¥—à–∏—Ö –≤–æ –≤—Ä–µ–º—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏

let timeoutid = []; // —Å–ø–∏—Å–æ–∫ id –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π, –∫–æ—Ç–æ—Ä—ã–µ –Ω–∞—Ö–æ–¥—è—Ç—Å—è –≤ 2 —Å–µ–∫—É–Ω–¥–Ω–æ–º —Ç–∞–π–º-–∞—É—Ç–µ
values.pings = []      // —Å–ø–∏—Å–æ–∫ –ø–æ—Å–ª–µ–¥–Ω–∏—Ö –ø–∏–Ω–≥–æ–≤ –¥–æ —Å–µ—Ä–≤–µ—Ä–æ–≤ Discord (–¥–ª—è –æ—Ç–ª–∞–≤–ª–∏–≤–∞–Ω–∏—è –ø—Ä–æ–±–ª–µ–º —Å –∏–Ω—Ç–µ—Ä–Ω–µ—Ç–æ–º)

// –ù–∞—á–∞–ª–æ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏
console.log(getTimestamp() + ' [INFO] (1/3) Loading values...');
init_step1(); // –ø–µ—Ç—Ä–æ–≤–∏—á, –≤—Ä—É–±–∞–π –Ω–∞—Å–æ—Å


async function init_step1(){ // –∑–∞–≥—Ä—É–∑–∫–∞ –∑–Ω–∞—á–µ–Ω–∏–π
	return await fs.readdir("./src/values/", (err, files)=>{ // –∑–∞–≥—Ä—É–∑–∏—Ç—å —Ñ–∞–π–ª—ã –∏–∑ –ø–∞–ø–∫–∏
		if (err) throw err;
		for ( const file of files ) { // –ø–µ—Ä–µ–±—Ä–∞—Ç—å –≤—Å–µ —Ñ–∞–π–ª—ã
			try {
				if (file.endsWith(".json")) { // –µ—Å–ª–∏ .json —Ç–æ —Ä–∞–±–æ—Ç–∞—Ç—å
					const fileName = file.substring(0,file.length-5); // –∫—Ä–∞—Å–∏–≤–æ–µ –∏–º—è —Ñ–∞–π–ª–∞ –¥–ª—è –ª–æ–≥–∞
					const variable = require("./src/values/" + file); // —á—Ç–µ–Ω–∏–µ –∑–Ω–∞—á–µ–Ω–∏—è –∏–∑ —Ñ–∞–π–ª–∞
					values[fileName] = variable[fileName]; // –∑–∞–ø–∏—Å—å –∑–Ω–∞—á–µ–Ω–∏—è –≤ –≥–ª–æ–±–∞–ª—å–Ω—ã–π —Å–ø–∏—Å–æ–∫
				};
			} catch(err) { // –ø—Ä–∏ –æ—à–∏–±–∫–µ –ª–æ–≥
				console.error(err);
				errors.push(err.name);
			};
		};
		if (!values.prefix) { // –µ—Å–ª–∏ –Ω–µ—Ç –ø—Ä–µ—Ñ–∏–∫—Å–∫–∞
			errors.push('noPrefix');
		};
		if (!values.discordtoken) { // –µ—Å–ª–∏ –Ω–µ—Ç —Ç–æ–∫–µ–Ω–∞
			errors.push('noDiscordToken');
		};
		if (values.debug) { // –µ—Å–ª–∏ –¥–µ–±–∞–≥ —Ç–æ —Å–æ–æ–±—â–∏—Ç—å (–Ω–∞ –≤—Å—è–∫–∏–π)
			console.log(getTimestamp() + ' [INFO] Debug logger enabled');
		};
		console.log(getTimestamp() + ' [INFO] (2/3) Loading functions...');
		init_step2(); // —Å–ª–µ–¥—É—é—â–∏–π —ç—Ç–∞–ø
	});
};

async function init_step2(){ // –∑–∞–≥—Ä—É–∑–∫–∞ —Ñ—É–Ω–∫—Ü–∏–π
	await fs.readdir("./src/functions/", (err, files) => { // –∑–∞–≥—Ä—É–∑–∏—Ç—å —Ñ–∞–π–ª—ã –∏–∑ –ø–∞–ø–∫–∏
		if (err) throw err;
		for ( const file of files ) {// –ø–µ—Ä–µ–±—Ä–∞—Ç—å –≤—Å–µ —Ñ–∞–π–ª—ã
			try {
				if (file.endsWith(".js")) { // –µ—Å–ª–∏ .js —Ç–æ —Ä–∞–±–æ—Ç–∞—Ç—å
					let fileName = file.substring(0,file.length-3); // –∫—Ä–∞—Å–∏–≤–æ–µ –∏–º—è
					let funky = require("./src/functions/"+fileName); // —á–∏—Ç–∞–µ–º —Ñ–∞–π–ª
					let func = new funky(); // –≤—ã—Ç–∞—Å–∫–∏–≤–∞–µ–º –∏–∑ —Ñ–∞–π–ª–∞ —Ñ—É–Ω–∫—Ü–∏—é
					funcs[func.name] = func.run; // –∑–∞–ø–∏—Å—å —Ñ—É–Ω–∫—Ü–∏–∏ –≤ –≥–ª–æ–±–∞–ª—å–Ω—ã–π —Å–ø–∏—Å–æ–∫
				};
			} catch(err) { // –ø—Ä–∏ –æ—à–∏–±–∫–µ –ª–æ–≥
				console.error(err);
				errors.push(err.name);
			};
		};
		if (!funcs.error) { // –µ—Å–ª–∏ –Ω–µ—Ç —Ñ—É–Ω–∫—Ü–∏–∏ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è –æ—à–∏–±–æ–∫
			errors.push('noErrorlogFunc');
		};
		if (!funcs.log) { // –µ—Å–ª–∏ –Ω–µ—Ç —Ñ—É–Ω–∫—Ü–∏–∏ –æ–±—â–µ–≥–æ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
			errors.push('noLogFunc');
		};
		console.log(getTimestamp() + ' [INFO] (3/3) Loading commands...');
		init_step3(); // —Å–ª–µ–¥—É—é—â–∏–π —ç—Ç–∞–ø
	});
};
	
async function init_step3() { // –∑–∞–≥—Ä—É–∑–∫–∞ –∫–æ–º–∞–Ω–¥
	await fs.readdir("./src/commands/", (err, files) => {
		if (err) throw err;
		for ( const file of files ) { 
			try {
				if (file.endsWith(".js")) { // –µ—Å–ª–∏ .js —Ç–æ —Ä–∞–±–æ—Ç–∞—Ç—å
					let fileName = file.substring(0,file.length-3);
					let cmdPrototype = require("./src/commands/"+fileName); // —á–∏—Ç–∞–µ–º —Ñ–∞–π–ª
					let command = new cmdPrototype(kitsune, commands, values); // –≤—ã—Ç–∞—Å–∫–∏–≤–∞–µ–º –∏–∑ —Ñ–∞–π–ª–∞ —Ñ—É–Ω–∫—Ü–∏—é
					commands.push(command); // –∑–∞–ø–∏—Å—å —Ñ—É–Ω–∫—Ü–∏–∏ –≤ –≥–ª–æ–±–∞–ª—å–Ω—ã–π —Å–ø–∏—Å–æ–∫
				};
			} catch(err) {
				console.error(err);
				errors.push(err.name);
			};
		};
		let HelpExists = false;
		for ( const command of commands ) {
			if (command.name == 'help') HelpExists = true;
		};
		if (!HelpExists) {errors.push('noHelpComm')};
		init_step4(); // —Å–ª–µ–¥—É—é—â–∏–π —ç—Ç–∞–ø
	});
};

async function init_step4() { // –ø—Ä–æ–≤–µ—Ä–∫–∞ –æ—à–∏–±–æ–∫
	if (errors.length > 0) { // –µ—Å–ª–∏ –µ—Å—Ç—å –æ—à–∏–±–∫–∏ —Ç–æ –Ω–∞—á–∞—Ç—å –ª–æ–≥
		console.log(getTimestamp() + ' [ERROR] Errors detected: ' + errors.join(', ')); // –ø–æ—Å—ã–ª–∞–µ–º –∏–Ω—Ñ—É –≤ –∫–æ–Ω—Å–æ–ª—å
		if (funcs.log && values.discordtoken) { // –µ—Å–ª–∏ –µ—Å—Ç—å —á–µ–º –∏ –∫—É–¥–∞ –ª–æ–≥–∏—Ä–æ–≤–∞—Ç—å
			kitsune.login(values.discordtoken); // –ª–æ–≥–∏–Ω –≤ –¥–∏—Å–∫–æ—Ä–¥ (–¥–∞–ª–µ–µ —á–µ–∫ –æ—à–∏–±–æ–∫ –≤ once.ready)
			return;
		} else { // –µ—Å–ª–∏ –Ω–µ—á–µ–º –ª–æ–≥–∏—Ä–æ–≤–∞—Ç—å
			console.log(getTimestamp() + ' [ERROR] Failed to report the error');
			process.exit(1); // –≤—ã—Ö–æ–¥–∏–º –∏–∑ js
			return;
		};
		return;
	};
	
	// –≤—Å—ë –æ–∫. –ª–æ–≥–∏—Ä—É–µ–º –æ —Ö–æ—Ä–æ—à–µ–º –∏ –≤—Ö–æ–¥–∏–º –≤ –¥–∏—Å–∫–æ—Ä–¥
	console.log(getTimestamp() + ' [INFO] Initialization completed successful. ' + ((Date.now() - launch_time) / 1000 ) + 's');
	console.log(getTimestamp() + ' [INFO] Logging in Discord...' );
	kitsune.login(values.discordtoken); // –ª–æ–≥–∏–Ω–∏–º—Å—è
};

// —Ñ—É–Ω–∫—Ü–∏—è –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è –≤—Ä–µ–º–µ–Ω–∏
function getTimestamp() {
	var date = new Date(); // –∑–∞–¥–∞—ë–º —Ç–µ–∫—É—â—É—é –ø–æ–µ–±–æ—Ç—É

	// –ø—Ä–µ–æ–±—Ä–∞–∑—É–µ–º –≤—Å—é –ø–æ–µ–±–æ—Ç—É –≤ –Ω–æ—Ä–º–∞–ª—å–Ω—ã–π –≤–∏–¥ (—á—Ç–æ –±—ã –±—ã–ª–æ –Ω–µ 2.3.2022, –∞ 02.03.2022)
	var hours = date.getHours();
	if (hours < 10) {
		hours = "0" + hours;
	};
	var mins = date.getMinutes();
	if (mins < 10) {
		mins = "0" + mins;
	};
	var seconds = date.getSeconds();
	if (seconds < 10) {
		seconds = "0" + seconds;
	};
	
	return date.getFullYear() + "-" + (date.getMonth() + 1) + "-" + date.getDate() + " " + hours + ":" + mins + ":" + seconds; // –≤—ã–≤–æ–¥–∏–º –∫—Ä–∞—Å–∏–≤—É—é –ø–æ–µ–±–æ—Ç—É
};

function checkInternet(kitsune) { // –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç–∞ –∫–∞–∂–¥—ã–µ 50 —Å–µ–∫—É–Ω–¥. –ï—Å–ª–∏ –ø–∏–Ω–≥ –±—É–¥–µ—Ç –æ–¥–Ω–∏–º –∏ —Ç–µ–º –∂–µ 10 —Ä–∞–∑ –ø–æ–¥—Ä—è–¥, —Ç–æ –±—É–¥–µ–º —Å—á–∏—Ç–∞—Ç—å, —á—Ç–æ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ –æ–±–æ—Ä–≤–∞–Ω–æ
	//console.log(getTimestamp() + ' [DEBUG] Ping: ' + kitsune.ws.ping)
	if (values.pings.length == 10) { values.pings.shift() }; // –µ—Å–ª–∏ —Å–ª–∏—à–∫–æ–º –º–Ω–æ–≥–æ –ø–∏–Ω–≥–æ–≤, —Ç–æ —É–¥–∞–ª–∏—Ç—å —Å–∞–º—ã–π —Å—Ç–∞—Ä—ã–π
	values.pings.push(kitsune.ws.ping);
	
	if (values.pings.filter(item => item === values.pings[0]).length == 10) { // –µ—Å–ª–∏ –≤ –º–∞—Å—Å–∏–≤–µ 10 –æ–¥–∏–Ω–∞–∫–æ–≤—ã—Ö –ø–∏–Ω–≥–æ–≤
		console.log(getTimestamp() + ' [ERROR] Latest latencies (' + values.pings + ') are identical. We might lost connection to discord server!');
		console.log(getTimestamp() + ' [INFO] Logging out...');
		fs.writeFile('./src/values/ping_failure.json', '{"ping_failure": true}', function (err) {
		  if (err) return console.log(err);
		});
		kitsune.destroy() // –æ—Ç–∫–ª—é—á–∞–µ–º—Å—è
		setTimeout(() => {
			process.exit(1); // –≤—ã—Ö–æ–¥–∏–º –∏–∑ js
		}, 2500);
	} else {
		setTimeout(() => { // repeat again in 50 secs
			checkInternet(kitsune)
		}, 50000);
	};
};

// –æ–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–æ–≤–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è
kitsune.on("messageCreate", async msg => {
	/* try {
		if (msg.channelId == 750403949202243695) { // –Ω–æ–≤–æ—Å—Ç–∏ —ä–µ—ä
			msg.react('<:neeet:1039589647032012930>'); // ?
		};
		if (msg.channelId == 838430531188162640) { // dev-log —ä–µ—ä
			var date = new Date(); // –∑–∞–¥–∞—ë–º —Ç–µ–∫—É—â—É—é –ø–æ–µ–±–æ—Ç—É
			msg.react('ü§Æ'); // –æ–∑–æ–Ω –æ–¥–æ–±—Ä—è–µ—Ç
			msg.channel.threads.create({ // –ø–∏—à–µ–º –æ—Ç–∑—ã–≤ –æ–± –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏
				name: '–±–ª (' + date.getFullYear() + "." + (date.getMonth() + 1) + "." + date.getDate() + ')',
				startMessage: msg,
				reason: '–≤–∞–¥–∏–º –ª—é–±–∏—Ç –∫–æ–∫–∏ (' + (date.getMonth() + 1) + "." + date.getDate() + ')'
			}).then(threadChannel => threadChannel.send('–∫—Ä–∏–Ω–∂–∞—Ç–∏–Ω–∞. –ª—É—á—à–µ –±—ã –Ω–µ –ø–∏—Å–∞–ª –Ω–∏—á–µ–≥–æ <:bravo:1039589650773315584>'));
		};
	} catch(err) {
		console.log('Failed to place reaction to the message')
	}; */

	if (values.debug && values.developers[0] != msg.author.id || msg.author.bot) return; // –∏–≥–Ω–æ—Ä –±–æ—Ç–∞ –∏ –∏–≥–Ω–æ—Ä –≤—Å–µ—Ö –≤ –¥–µ–±–∞–≥ —Ä–µ–∂–∏–º–µ
	if (timeoutid.indexOf(msg.author.id) != -1) return; // –ø—Ä–æ–≤–µ—Ä—è–µ–º –≤ —Ç–∞–π–º-–∞—É—Ç–µ –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å
	timeoutid.push(msg.author.id); // –¥–æ–±–∞–≤–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ —Ç–∞–π–º-–∞—É—Ç
	setTimeout(() => { // —á–µ—Ä–µ–∑ 2 —Å–µ–∫—É–Ω–¥—ã —Å–Ω–∏–º–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å —Ç–∞–π–º-–∞—É—Ç–∞
		const index = timeoutid.indexOf(msg.author.id); // —á–µ–∫–∞–µ–º –µ—Å—Ç—å –ª–∏ id –≤ —Ç–∞–π–º-–∞—É—Ç–µ
		if (index !== -1) { timeoutid.splice(index, 1) }; // —É–¥–∞–ª—è–µ–º –∏–∑ —Ç–∞–π–º-–∞—É—Ç–∞
	}, 2000);
	
	let args = msg.content.split(" "); // —Ñ–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º –∞—Ä–≥—É–º–µ–Ω—Ç—ã
	if (args[0].toLowerCase().startsWith(values.prefix)) { // –µ—Å–ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ –Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è —Å –ø—Ä–µ—Ñ–∏–∫—Å–∞ —Ç–æ —Ä–∞–±–æ—Ç–∞—Ç—å
		let cmd = args[0].substring(values.prefix.length) // –ø–æ–ª—É—á–∞–µ–º –∏–º—è –≤—ã–∑—ã–≤–∞–µ–º–æ–π –∫–æ–º–∞–Ω–¥—ã –∏–∑ —Å–æ–æ–±—â–µ–Ω–∏—è
		commands.forEach(command => { // –ø–µ—Ä–µ–±–∏—Ä–∞–µ–º —Å–ø–∏—Å–æ–∫ –∫–æ–º–∞–Ω–¥ –≤ –±–æ—Ç–µ
			if (command.name == cmd.toLowerCase()) { // –µ—Å–ª–∏ –∫–æ–º–∞–Ω–¥–∞ –≤ —Å–æ–æ–±—â–µ–Ω–∏–∏ —Å–æ–≤–ø–∞–ª–∞ —Å –∫–æ–º–∞–Ω–¥–æ–π –∏–∑ —Å–ø–∏—Å–∫–∞ –±–æ—Ç–∞ —Ç–æ —Ä–∞–±–æ—Ç–∞—Ç—å	
				let running_comm = ''
				if (msg.guild) { // –µ—Å–ª–∏ –≤—ã–∑–≤–∞–Ω–æ –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ —Ç–æ –ø—Ä–æ–≤–µ—Ä–∏—Ç—å –ø—Ä–∞–≤–∞
					let permissions = [];
					if (msg.channel.type === Discord.ChannelType.GuildForum || msg.channel.type === Discord.ChannelType.GuildPublicThread || msg.channel.type === Discord.ChannelType.GuildPrivateThread) {
						permissions = ['SendMessages', 'SendMessagesInThreads', 'EmbedLinks', ...command.perms]; // –∑–∞–¥–∞—ë–º –ø—Ä–∞–≤–∞, –∫–æ—Ç–æ—Ä—ã–µ –Ω–∞–¥–æ –ø—Ä–æ–≤–µ—Ä–∏—Ç—å
					} else {
						permissions = ['SendMessages', 'EmbedLinks', ...command.perms]; // –∑–∞–¥–∞—ë–º –ø—Ä–∞–≤–∞, –∫–æ—Ç–æ—Ä—ã–µ –Ω–∞–¥–æ –ø—Ä–æ–≤–µ—Ä–∏—Ç—å
					}
					
					let missing = []
					permissions.forEach(perm => { // —á–µ–∫–∞–µ–º –∫–∞–∂–¥—ã–π –ø–µ—Ä–º–∏—à–Ω
							if (perm) { // –µ—Å–ª–∏ —Å—Ç—Ä–æ–∫–∞ —Å–ª—É—á–∞–π–Ω–æ –Ω–µ –ø—É—Å—Ç–∞—è
								eval("if (!msg.guild.members.me.permissionsIn(msg.channel).has([Discord.PermissionsBitField.Flags." + perm + "])) { missing.push('" + perm + "') }") // –¥–∏–∫–∏–π –∫–æ—Å—Ç—ã–ª—å –Ω–æ —Ä–∞–±–æ—Ç–∞–µ—Ç
							};
					});
					if (!missing[0] == "") { // –µ—Å–ª–∏ –∫–∞–∫–æ–µ –ª–∏–±–æ –ø—Ä–∞–≤–æ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ —Ç–æ –ø–∞–Ω–∏–∫–∞
						funcs.error(kitsune, values, msg, args, command.name, "Required permissions not found: " + missing.join(', '));
						return;
					};
				};
				if (msg.author.id == "482209243714551818" || msg.author.id == "842879459132833813" && command.name == "china") { // –±–∞–Ω —á—É–º—ã –∑–∞ –¥–æ–ª–±–æ–µ–±–∏–∑–º
					let embed = new Discord.EmbedBuilder()
					embed.setTitle('–±–∞–Ω–∞–Ω')
					embed.setColor(`#ffb8c2`)
					embed.setDescription("—Ö–∞-—Ö–∞. –ø–ª–æ—Ç–∏ –Ω–æ–ª–æ–≥–∏ :money_with_wings:")
					msg.reply({ embeds: [embed] });
					return;
				}
				try {
					console.log(getTimestamp() + " [INFO] executed command " + command.name); // –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –æ –ø—Ä–æ—Ö–æ–¥–µ –≤—Å–µ—Ö –ø—Ä–æ–≤–µ—Ä–æ–∫ –∏ –Ω–∞—á–∞–ª–µ –∑–∞–ø—É—Å–∫–µ –∫–æ–º–∞–Ω–¥—ã
					command.run(kitsune, msg, args); // –∑–∞–ø—É—Å–∫ –∫–æ–º–∞–Ω–¥—ã
				} catch (error) { // –µ—Å–ª–∏ –æ—à–∏–±–∫–∞ —Ç–æ –ª–æ–≥–∏—Ä–æ–≤–∞—Ç—å –æ—à–∏–±–∫—É
					funcs.error(kitsune, values, msg, args, command.name, error);
				};
			};
		});
	};
});

// –æ–±—Ä–∞–±–æ—Ç–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –∏–∑–º–µ–Ω—ë–Ω–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è
kitsune.on('messageUpdate', async (oldMsg, msg) => {
	if (values.debug && values.developers[0] != msg.author.id || msg.author.bot) return; // –∏–≥–Ω–æ—Ä –±–æ—Ç–∞ –∏ –∏–≥–Ω–æ—Ä –≤—Å–µ—Ö –≤ –¥–µ–±–∞–≥ —Ä–µ–∂–∏–º–µ
	if (timeoutid.indexOf(msg.author.id) != -1) return; // –ø—Ä–æ–≤–µ—Ä—è–µ–º –≤ —Ç–∞–π–º-–∞—É—Ç–µ –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å
	timeoutid.push(msg.author.id); // –¥–æ–±–∞–≤–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ —Ç–∞–π–º-–∞—É—Ç
	setTimeout(() => { // —á–µ—Ä–µ–∑ 5 —Å–µ–∫—É–Ω–¥ —Å–Ω–∏–º–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å —Ç–∞–π–º-–∞—É—Ç–∞
		const index = timeoutid.indexOf(msg.author.id); // —á–µ–∫–∞–µ–º –µ—Å—Ç—å –ª–∏ id –≤ —Ç–∞–π–º-–∞—É—Ç–µ
		if (index !== -1) { timeoutid.splice(index, 1) }; // —É–¥–∞–ª—è–µ–º –∏–∑ —Ç–∞–π–º-–∞—É—Ç–∞
	}, 2000);
	
	let args = msg.content.split(" "); // —Ñ–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º –∞—Ä–≥—É–º–µ–Ω—Ç—ã
	if (args[0].toLowerCase().startsWith(values.prefix)) { // –µ—Å–ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ –Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è —Å –ø—Ä–µ—Ñ–∏–∫—Å–∞ —Ç–æ —Ä–∞–±–æ—Ç–∞—Ç—å
		let cmd = args[0].substring(values.prefix.length) // –ø–æ–ª—É—á–∞–µ–º –∏–º—è –≤—ã–∑—ã–≤–∞–µ–º–æ–π –∫–æ–º–∞–Ω–¥—ã –∏–∑ —Å–æ–æ–±—â–µ–Ω–∏—è
		commands.forEach(command => { // –ø–µ—Ä–µ–±–∏—Ä–∞–µ–º —Å–ø–∏—Å–æ–∫ –∫–æ–º–∞–Ω–¥ –≤ –±–æ—Ç–µ
			if (command.name == cmd.toLowerCase()) { // –µ—Å–ª–∏ –∫–æ–º–∞–Ω–¥–∞ –≤ —Å–æ–æ–±—â–µ–Ω–∏–∏ —Å–æ–≤–ø–∞–ª–∞ —Å –∫–æ–º–∞–Ω–¥–æ–π –∏–∑ —Å–ø–∏—Å–∫–∞ –±–æ—Ç–∞ —Ç–æ —Ä–∞–±–æ—Ç–∞—Ç—å	
				let running_comm = ''
				if (msg.guild) { // –µ—Å–ª–∏ –≤—ã–∑–≤–∞–Ω–æ –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ —Ç–æ –ø—Ä–æ–≤–µ—Ä–∏—Ç—å –ø—Ä–∞–≤–∞
					let permissions = [];
					if (msg.channel.type === Discord.ChannelType.GuildForum || msg.channel.type === Discord.ChannelType.GuildPublicThread || msg.channel.type === Discord.ChannelType.GuildPrivateThread) {
						permissions = ['SendMessages', 'SendMessagesInThreads', 'EmbedLinks', ...command.perms]; // –∑–∞–¥–∞—ë–º –ø—Ä–∞–≤–∞, –∫–æ—Ç–æ—Ä—ã–µ –Ω–∞–¥–æ –ø—Ä–æ–≤–µ—Ä–∏—Ç—å
					} else {
						permissions = ['SendMessages', 'EmbedLinks', ...command.perms]; // –∑–∞–¥–∞—ë–º –ø—Ä–∞–≤–∞, –∫–æ—Ç–æ—Ä—ã–µ –Ω–∞–¥–æ –ø—Ä–æ–≤–µ—Ä–∏—Ç—å
					}
					
					let missing = []
					permissions.forEach(perm => { // —á–µ–∫–∞–µ–º –∫–∞–∂–¥—ã–π –ø–µ—Ä–º–∏—à–Ω
							if (perm) { // –µ—Å–ª–∏ —Å—Ç—Ä–æ–∫–∞ —Å–ª—É—á–∞–π–Ω–æ –Ω–µ –ø—É—Å—Ç–∞—è
								eval("if (!msg.guild.members.me.permissionsIn(msg.channel).has([Discord.PermissionsBitField.Flags." + perm + "])) { missing.push('" + perm + "') }") // –¥–∏–∫–∏–π –∫–æ—Å—Ç—ã–ª—å –Ω–æ —Ä–∞–±–æ—Ç–∞–µ—Ç
							};
					});
					if (!missing[0] == "") { // –µ—Å–ª–∏ –∫–∞–∫–æ–µ –ª–∏–±–æ –ø—Ä–∞–≤–æ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ —Ç–æ –ø–∞–Ω–∏–∫–∞
						funcs.error(kitsune, values, msg, args, command.name, "Required permissions not found: " + missing.join(', '));
						return;
					};
				};
				if (msg.author.id == "482209243714551818" || msg.author.id == "842879459132833813" && command.name == "china") { // –±–∞–Ω —á—É–º—ã –∑–∞ –¥–æ–ª–±–æ–µ–±–∏–∑–º
					let embed = new Discord.EmbedBuilder()
					embed.setTitle('–±–∞–Ω–∞–Ω')
					embed.setColor(`#ffb8c2`)
					embed.setDescription("—Ö–∞-—Ö–∞. –ø–ª–æ—Ç–∏ –Ω–æ–ª–æ–≥–∏ :money_with_wings:")
					msg.reply({ embeds: [embed] });
					return;
				}
				try {
					console.log(getTimestamp() + " [INFO] executed command " + command.name); // –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –æ –ø—Ä–æ—Ö–æ–¥–µ –≤—Å–µ—Ö –ø—Ä–æ–≤–µ—Ä–æ–∫ –∏ –Ω–∞—á–∞–ª–µ –∑–∞–ø—É—Å–∫–µ –∫–æ–º–∞–Ω–¥—ã
					command.run(kitsune, msg, args); // –∑–∞–ø—É—Å–∫ –∫–æ–º–∞–Ω–¥—ã
				} catch (error) { // –µ—Å–ª–∏ –æ—à–∏–±–∫–∞ —Ç–æ –ª–æ–≥–∏—Ä–æ–≤–∞—Ç—å –æ—à–∏–±–∫—É
					funcs.error(kitsune, values, msg, args, command.name, error);
				};
			};
		});
	};
});

// –æ–±—Ä–∞–±–æ—Ç–∫–∞ –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–æ–≥–æ —ç–ª–µ–º–µ–Ω—Ç–∞ (–∫–Ω–æ–ø–∫–∏, —Å–ª—ç—à-–∫–æ–º–∞–Ω–¥—ã)
// TODO
//kitsune.on('interactionCreate', async (oldMsg, msg) => { });

// –∑–∞–ª–æ–≥–∏–Ω–∏–ª–∏—Å—å. —Ç–µ–ø–µ—Ä—å –ª–æ–≥–∏—Ä—É–µ–º –æ–± —ç—Ç–æ–º, –∑–∞–¥–∞—ë–º —Å—Ç–∞—Ç—É—Å—ã –∏ —Ç.–¥.
kitsune.once('ready', () => {
	console.log(getTimestamp() + " [INFO] Logged in"); // —É–≤–µ–¥–æ–º–ª—è–µ–º –æ–± —É—Å–ø–µ—à–Ω–æ–º –≤—Ö–æ–¥–µ
	delete values.discordtoken; // —á–∏—Å—Ç–∏–º —Ç–æ–∫–µ–Ω –∏–∑ –ø–∞–º—è—Ç–∏ –∫–æ–≥–¥–∞ –∑–∞–ª–æ–≥–∏–Ω–∏–ª–∏—Å—å
	if (errors.length > 0) { // –µ—Å–ª–∏ –µ—Å—Ç—å –æ—à–∏–±–∫–∏ —Ç–æ –ª–æ–≥–∏—Ä–æ–≤–∞—Ç—å
		kitsune.user.setStatus('invisible'); // —Å—Ç–∞—Ç—É—Å –Ω–µ–≤–∏–¥–∏–º–∫–∏
		funcs.log(kitsune, 'syserror', 'Errors occurred during the loading:\n`' + errors.join(', ') + '`\nCheck the console for more information', values); // –æ—Ç—Å—ã–ª–∞–µ–º –æ—Ç—á—ë—Ç
		console.log(getTimestamp() + " [INFO] " + `${kitsune.user.username} sent a report to the developers. Logging out...`);
		setTimeout(() => { // –æ–∂–∏–¥–∞–µ–º –ø–æ–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ —Ç–æ—á–Ω–æ –æ—Ç–ø—Ä–∞–≤–∏—Ç—Å—è
			kitsune.destroy(); // –≤—ã—Ö–æ–¥–∏–º –∏–∑ –¥–∏—Å–∫–æ—Ä–¥–∞
			process.exit(1); // –≤—ã—Ö–æ–¥–∏–º –∏–∑ js
		}, 3000);
	} else { // –µ—Å–ª–∏ –Ω–µ—Ç –æ—à–∏–±–æ–∫ —Ç–æ –∑–∞–ø—É—Å–∫
		if (values.ping_failure) {
			fs.unlink('./src/values/ping_failure.json', (err) => {
			  if (err) throw err;
			});
			delete values.ping_failure
			funcs.log(kitsune, 'syswarning', 'A connection error occurred last boot, but we successfully reloaded and ready to go!', values); // –æ—Ç—Å—ã–ª–∞–µ–º –æ—Ç—á—ë—Ç
		};
		values.pings.push(kitsune.ws.ping) // –ø–∏—à–µ–º –ø–∏–Ω–≥
		setTimeout(() => { // –∑–∞–ø—É—Å–∫ —Ü–∏–∫–ª–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç–∞
			checkInternet(kitsune)
		}, 5000);
		// —É—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å—Ç–∞—Ç—É—Å–∞
		if (values.debug) { // –µ—Å–ª–∏ –¥–µ–±–∞–≥
			kitsune.user.setStatus('idle'); // —Å—Ç–∞—Ç—É—Å –Ω–µ –±–µ—Å–ø–æ–∫–æ–∏—Ç—å
			kitsune.user.setActivity('debug'); // –∏–≥—Ä–∞–µ—Ç –≤ –¥–µ–±–∞–≥
		} else { // –µ—Å–ª–∏ –≤—Å—ë –Ω–æ—Ä–º–∞–ª—å–Ω–æ
			kitsune.user.setStatus('online'); // —Å—Ç–∞—Ç—É—Å –≤ —Å–µ—Ç–∏
			kitsune.user.setActivity(values.prefix + 'help'); // –∏–≥—Ä–∞–µ—Ç –≤ <prefix>help
		};
		console.log(getTimestamp() + " [INFO] " + `Total launch time: ${((Date.now() - launch_time) / 1000 )}s`);
		//console.log(getTimestamp() + " [INFO] " + `${kitsune.user.username} (ver: ${values.version}) is ready to work!`);
		funcs.log(kitsune, 'sysinfo', kitsune.user.username + ' (ver: ' + values.version + ') is ready to work!', values); // –æ—Ç—Å—ã–ª–∞–µ–º –æ—Ç—á—ë—Ç
	};
});
